in a: Events[Int]
in b: Events[Int]

type EventPair[T1, T2] := (Events[T1], Events[T2])

def t1: (Events[Int], Events[Int]) := ${_1 = a, _2 = b}

def t2: ${_1: Events[Int], _2: Events[Int]} := mkPair(a-1, a+2)

def mkPair[A, B](x: Events[A], y: Events[B]): EventPair[A, B] := (x, y)

def sumPair(t: EventPair[Int, Int]) := t._1 + t._2

out sumPair(t1)
out sumPair(t2)

out (1, "lala", ())._2