module Set {
  def empty[T]: Set[T] = __builtin__(Set_empty)

  @liftable
  def add[T](set: Set[T], item: T): Set[T] = __builtin__(Set_add)

  @liftable
  def contains[T](set: Set[T], item: T): Bool = __builtin__(Set_contains)

  @liftable
  def remove[T](set: Set[T], item: T): Set[T] = __builtin__(Set_remove)

  @liftable
  def size[T](set: Set[T]): Int = __builtin__(Set_size)

  @liftable
  def union[T](set1: Set[T], set2: Set[T]): Set[T] = __builtin__(Set_union)

  @liftable
  def intersection[T](set1: Set[T], set2: Set[T]): Set[T] = __builtin__(Set_intersection)

  @liftable
  def fold[T, U](set: Set[T], start: U, f: (U, T) => U): U = __builtin__(Set_fold)

  def collect[T](value: Events[T]) = {
    def set: Events[Set[T]] = default(add(last(set, value), value), empty[T])
    set
  }
}