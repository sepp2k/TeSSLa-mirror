def mergeValues[T](a: Events[T], b: Events[T]) :=
  if default(time(a), 0) >= default(time(b), 0)
  then defaultFrom(a,b)
  else defaultFrom(b,a)

def on[T](trigger: Events[Unit], stream: Events[T]) :=
  mergeValues(
    if time(trigger) == time(stream) then stream,
    if time(trigger) > time(stream) then last(stream, trigger)
  )

in x: Events[Unit]
in y: Events[Int]

out on(x,y) as z