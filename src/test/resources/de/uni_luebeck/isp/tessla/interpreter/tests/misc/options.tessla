in keys: Events[String]

def map := Map_add(Map.empty[String, String], "foo", "zweiundvierzig")

@liftable
def safeGet[K,V](map: Map[K, V], key: K): Option[V] :=
  if Map_contains(map, key)
  then Some(Map_get(map, key))
  else None[V]

@liftable
def prettyPrint(opt: Option[String]): String :=
  if isNone(opt)
  then "IsNix"
  else getSome(opt)

out safeGet(map, keys)
out prettyPrint(safeGet(map, keys)) as pretty