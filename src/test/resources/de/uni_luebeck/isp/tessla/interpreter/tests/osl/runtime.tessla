def duration := rt("compute")
out duration

def error := filterConst((), duration > 45ms)
out error # unit events

out maximum(duration) as max



-- Standard Library
def rt(name: String) := {
  def call := function_call(name)
  def ret := function_return(name)
  return at(ret, time(ret) - time(call))
}

def at[A,B](x: Events[A], y: Events[B]) :=
  filter(y, time(x) == time(y))

in instruction: Events[String]
in function: Events[String]
in functioncall: Events[String]

def function_call(name: String) := filterConst((), functioncall == name)
def function_return(name: String) := filterConst((), function == name && instruction == "ret")