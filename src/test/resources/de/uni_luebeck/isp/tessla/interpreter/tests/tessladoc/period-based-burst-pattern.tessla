def resetCount[T](events: Events[T], reset: Events[Unit]) := {
  def s: Events[Int] :=
    if time(events) == default(time(reset),0) then
      1
    else if time(events) > default(time(reset),0) then
      last(sum, events) + 1
    else
      0
  def sum := default(s, 0)
  sum
}

def period(delay: Int) := {
  def s: Events[Int] := default(delayedLast(s, s), delay)
  const((), s)
}

in x: Events[Unit]
def p := period(5)
out p
def c := resetCount(x, p)
out c
def e := c > 2
out e
