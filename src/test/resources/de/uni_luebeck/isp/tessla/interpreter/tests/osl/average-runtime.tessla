def foo := average(rt("foo"))
out foo

def bar := average(rt("bar"))
out bar

def baz := average(rt("baz"))
out baz

def rt(name: String) = runtime(function_call(name), function_return(name))

in line: Events[Int]
in column: Events[Int]
in thread_id: Events[Int]
in instruction: Events[String]
in function: Events[String]
in functioncall: Events[String]
in operandcount: Events[Int]

def code_line_exec(l: Int) := filterConst((), line == l && last(line, line) != l)
def function_call(name: String) := filterConst((), functioncall == name)
def function_return(name: String) := filterConst((), function == name && instruction == "ret")

