def resetCount(events, reset) := {
  def sum := default(if time(events) > default(time(reset),0) then last(sum, events) + 1 else 0, 0)
  sum
}

def period(delay) := {
  def s := default(delayedLast(s, s), delay)
  const((), s)
}

def burst(x, burstPeriod, maxNumberInBurst) := {
  def periodStream := period(burstPeriod)
  def numberInBurst := resetCount(x, periodStream)
  def error := numberInBurst > maxNumberInBurst
  error
}

in x: Events<Unit>
def error := burst(x, burstPeriod = 5, maxNumberInBurst = 2)
out error
