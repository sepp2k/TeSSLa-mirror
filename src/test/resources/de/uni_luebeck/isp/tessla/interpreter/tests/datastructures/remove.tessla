in x: Events<Int>

def get_count(counts, key) :=
    if map_contains(counts, key)
    then map_get(counts, key)
    else 0

def inc_count(counts, key) :=
    if key < 0
    then map_remove(counts, -key)
    else map_add(counts, key, get_count(counts, key) + 1)

def add(set, key) :=
    if key < 0
    then set_remove(set, -key)
    else set_add(set, key)

def counts := default(inc_count(last(counts, x), x), map_empty)

def seen := default(add(last(seen, x), x), set_empty)

out x
out counts
out seen