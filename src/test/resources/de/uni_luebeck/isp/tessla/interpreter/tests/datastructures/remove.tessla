in x: Events[Int]

def getCount(counts, key) :=
    if Map_contains(counts, key)
    then Map_get(counts, key)
    else 0

def incCount(counts, key) :=
    if key < 0
    then Map_remove(counts, -key)
    else Map_add(counts, key, getCount(counts, key) + 1)

def add(set, key) :=
    if key < 0
    then Set_remove(set, -key)
    else Set_add(set, key)

def counts := default(incCount(last(counts, x), x), Map_empty)

def seen := default(add(last(seen, x), x), Set_empty)

out x
out counts
out seen