in x: Events[Int]

-- This differs from counting_map.tessla in that the call to Map_get is now
-- nested directly in Map_add (and the getCount macro is inlined)
-- In previous versions this nesting caused an error value-related bug to surface.
-- So this is the regression test for that bug.
liftable def inc_count(counts: Map[Int, Int], key: Int) =
    if Map.contains(counts, key)
    then Map.add(counts, key, Map.get(counts, key) + 1)
    else Map.add(counts, key, 1)

def counts: Events[Map[Int, Int]] = default(inc_count(last(counts, x), x), Map.empty[Int, Int])

def size = Map.size(counts)

out x
out counts
out size
