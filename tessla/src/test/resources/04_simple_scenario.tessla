in MessageTimeStampNode: Events<Int>
in instructionReconstructionMessage.InstructionReconstructionID: Events<Int>
in regChangeMessage.RegChangeMessageValue: Events<Int>
in regChangeMessage.RegChangeMessageID: Events<Int>

define input_vector_timestamps := MessageTimeStampNode
define input_vector_ir_ids := instructionReconstructionMessage.InstructionReconstructionID
define input_vector_RegChangeMessageValue := regChangeMessage.RegChangeMessageValue
define input_vector_RegChangeMessageID := regChangeMessage.RegChangeMessageID

define onTrue(x) := filter(changeOf(x), x)

define exec(x) := filter(on(input_vector_ir_ids), eq(mrv(input_vector_ir_ids, 0), constantSignal(x)))

define callQS := exec(1) -- call to quick_sort()
define repeat := exec(2) -- start new iteration round

-- We implemented quicksort, so we shouldn't need more n*(n-1)/2 recursive calls (n=20).
define calls := eventCount(callQS, repeat)
define error := onTrue(gt(calls, constantSignal(div(mul(20,19),2))))
