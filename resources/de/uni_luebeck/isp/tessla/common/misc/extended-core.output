0: count(halfError) = 1
0: const(42, halfError) = 42
0: fold(halfError, 0, (c: Int, _: lazy Int) => c + 1) = 1
0: time(fold(x, 0, (c: Int, x: Int) => c * x + 12)) = 0
0: const(42, x) = 42
0: fold(x, 0, (c: Int, x: Int) => c * x + 12) = 12
0: pure(x) = 22
0: count(x + y) = 0
12: count(halfError) = 2
12: const(42, halfError) = 42
12: fold(halfError, 0, (c: Int, _: lazy Int) => c + 1) = 2
12: time(fold(x, 0, (c: Int, x: Int) => c * x + 12)) = 12
12: const(42, x) = 42
12: fold(x, 0, (c: Int, x: Int) => c * x + 12) = 72
12: pure(x) = 5
14: count(x + y) = 1
16: count(halfError) = 3
16: const(42, halfError) = 42
16: fold(halfError, 0, (c: Int, _: lazy Int) => c + 1) = 3
16: time(fold(x, 0, (c: Int, x: Int) => c * x + 12)) = 16
16: const(42, x) = 42
16: fold(x, 0, (c: Int, x: Int) => c * x + 12) = 516
16: unitIf(x > prev(x)) = ()
16: pure(x) = 7
16: count(x + y) = 2
18: count(halfError) = 4
18: const(42, halfError) = 42
18: fold(halfError, 0, (c: Int, _: lazy Int) => c + 1) = 4
18: time(fold(x, 0, (c: Int, x: Int) => c * x + 12)) = 18
18: const(42, x) = 42
18: fold(x, 0, (c: Int, x: Int) => c * x + 12) = 3624
18: count(x + y) = 3
20: count(x + y) = 4
21: count(halfError) = 5
21: const(42, halfError) = 42
21: fold(halfError, 0, (c: Int, _: lazy Int) => c + 1) = 5
21: time(fold(x, 0, (c: Int, x: Int) => c * x + 12)) = 21
21: const(42, x) = 42
21: fold(x, 0, (c: Int, x: Int) => c * x + 12) = 32628
21: unitIf(x > prev(x)) = ()
21: pure(x) = 9
21: count(x + y) = 5
21: filter(x, y == 3) = 9
25: count(halfError) = 6
25: const(42, halfError) = 42
25: fold(halfError, 0, (c: Int, _: lazy Int) => c + 1) = 6
25: time(fold(x, 0, (c: Int, x: Int) => c * x + 12)) = 25
25: const(42, x) = 42
25: fold(x, 0, (c: Int, x: Int) => c * x + 12) = 65268
25: pure(x) = 2
25: count(x + y) = 6
25: filter(x, y == 3) = 2
26: count(halfError) = 7
26: const(42, halfError) = 42
26: fold(halfError, 0, (c: Int, _: lazy Int) => c + 1) = 7
26: time(fold(x, 0, (c: Int, x: Int) => c * x + 12)) = 26
26: const(42, x) = 42
26: fold(x, 0, (c: Int, x: Int) => c * x + 12) = 65280
26: pure(x) = 1
26: count(x + y) = 7
37: count(halfError) = 8
37: const(42, halfError) = 42
37: fold(halfError, 0, (c: Int, _: lazy Int) => c + 1) = 8
37: time(fold(x, 0, (c: Int, x: Int) => c * x + 12)) = 37
37: const(42, x) = 42
37: fold(x, 0, (c: Int, x: Int) => c * x + 12) = 913932
37: unitIf(x > prev(x)) = ()
37: pure(x) = 14
37: count(x + y) = 8
37: filter(x, y == 3) = 14
